name: eog-resources

services:
  frontend:
    build:
      context: "./frontend"
      dockerfile: Dockerfile
    env_file: ".env"
    ports:
      - "80:80"
    networks:
      - "eog_resources_network"

  backend:
    build:
      context: "./backend"
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "9090:9090"
    env_file: ".env"
    networks:
      - "eog_resources_network"

  postgres:
    image: postgres:13
    ports:
      - "5432"
    env_file: ".env"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME} -h localhost"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - "eog_resources_network"
    restart: always

  email_worker:
    build:
      context: "./worker"
      dockerfile: Dockerfile
    env_file: ".env"
    depends_on:
      rabbit:
        condition: service_healthy
        restart: true
    networks:
      - "eog_resources_network"

  rabbit:
    image: rabbitmq:4.0.4-management-alpine
    env_file: ".env"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    networks:
      - "eog_resources_network"

networks:
  eog_resources_network:
